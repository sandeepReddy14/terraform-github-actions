# This is a workflow to help you get started with Actions

name: CI-Terraform-Github-Actions-Azure

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "terraform_deploy"
  terraform_deploy:
    # Environment variables for AZURE login
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_DEPLOY_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_DEPLOY_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_DEPLOY_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_DEPLOY_TENANT_ID }}
    
    # Sets default shell type to bash
      defaults:
        run:
          shell: bash

      # The type of runner that the job will run on
      runs-on: ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so job can access it
        - name: Checkout repository
          uses: actions/checkout@v4
        
        # Copies backend configuration to deploy folder
        - name: Copy backend.tf to deploy folder
          run: |
            echo "Current directory : $PWD"
            echo "Workspace : $GITHUB_WORKSPACE"
            ls
            cp $GITHUB_WORKSPACE/environments/dev/backend.tf $GITHUB_WORKSPACE/deploy/
            cd $GITHUB_WORKSPACE/deploy
            echo "Current directory : $PWD"
            ls
        
        # Configure Terraform Version
        - name: Set up terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 1.6.5
        
        # Terraform init
        - name: Terraform init command
          run: |
            echo "Current directory : $PWD"
            cd $GITHUB_WORKSPACE/deploy
            echo "Current directory : $PWD"
            ls
            terraform init
        
        # Terraform validate
        - name: Terraform Validate
          run: |
            echo "Current directory : $PWD"
            cd $GITHUB_WORKSPACE/deploy
            echo "Current directory : $PWD"
            ls
            terraform validate

        # Terraform plan
        - name: Terraform Plan
          run: |
            echo "Current directory : $PWD"
            cd $GITHUB_WORKSPACE/deploy
            echo "Current directory : $PWD"
            ls
            terraform plan -var-file="$GITHUB_WORKSPACE/environments/dev/environment.tfvars" -lock=false
        

        # Terraform Apply
        - name: Terraform Apply
          run: |
            echo "Current directory : $PWD"
            cd $GITHUB_WORKSPACE/deploy
            echo "Current directory : $PWD"
            ls
            terraform apply -var-file="$GITHUB_WORKSPACE/environments/dev/environment.tfvars" -auto-approve -lock=false

